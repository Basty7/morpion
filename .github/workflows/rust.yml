on: [push, pull_request, workflow_dispatch]

name: CI

env:
  # --cfg=web_sys_unstable_apis is required to enable the web_sys clipboard API which egui_web uses
  # https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Clipboard.html
  # https://rustwasm.github.io/docs/wasm-bindgen/web-sys/unstable-apis.html
  RUSTFLAGS: -D warnings --cfg=web_sys_unstable_apis
  RUSTDOCFLAGS: -D warnings

jobs:
  check:
    name: Check
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  check_wasm:
    name: Check wasm32
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features --target wasm32-unknown-unknown

  trunk:
    name: trunk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.76.0
          target: wasm32-unknown-unknown
          override: true
      - name: Download and install Trunk binary
        run: wget -qO- https://github.com/thedodd/trunk/releases/latest/download/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
      - name: Build
        run: ./trunk build

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
          TARGET: aarch64-apple-darwin

        - os: macos-latest
          TARGET: x86_64-apple-darwin

        - os: ubuntu-latest
          TARGET: arm-unknown-linux-musleabihf

        - os: ubuntu-latest
          TARGET: armv7-unknown-linux-musleabihf

        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-musl

        - os: windows-latest
          TARGET: x86_64-pc-windows-msvc
          EXTENSION: .exe

    steps:
    - name: Building ${{ matrix.TARGET }}
      run: echo "${{ matrix.TARGET }}"

    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1.0.1
      with:
        toolchain: stable
        target: ${{ matrix.TARGET }}
        override: true

    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --release --target=${{ matrix.TARGET }}

    - name: Rename
      run: cp target/${{ matrix.TARGET }}/release/TicTacToe${{ matrix.EXTENSION }} TicTacToe-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: actions/upload-artifact@master
      with:
        name: TicTacToe-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        path: TicTacToe-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: svenstaro/upload-release-action@v2
      name: Upload binaries to release
      if: ${{ github.event_name == 'push' }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: TicTacToe-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        asset_name: TicTacToe-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        tag: ${{ github.ref }}
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
        overwrite: true
